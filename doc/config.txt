Classpath란 자바 가상머신이 실행할 때 class파일을 찾는데 그 때 기준이 되는 경로

Project 루트 디렉터리의 config/에 설정파일을 넣으면 jar 로 패키징 할 때 config/ 안의
설정파일들이 포함되지 않으므로 jar를 실행하는 폴더 혹은 그 밑의 config/ 디렉토리에 직접 설정파일을 넣어줘야 한다.

src/main/resources의 properties/yml 파일은 패키징 될 때 classpath로 복사되므로
별도의 config 파일을 밖으로 빼지 않아도 된다.

jar 내부에 설정파일이 있어도 외부의 설정파일로 override 할 수 있다.
우선순위는 다음과 같다.

1. A /config subdirectory of the current directory
2. The current directory
3. A classpath /config package
4. The classpath root

https://www.baeldung.com/spring-properties-file-outside-jar

config 파일에서 nested property를 로드할 때, 해당 property 를 내부 클래스로 지정 시
static으로 선언해야 설정정보를 불러올 수 있다. 외부 클래스로 작성하면 static일 필요가 없다.
(변수에 @NestedConfigurationProperty 어노테이션 추가 - but, 없어도 설정은 로드됨)

@ConfigurationProperties가 명시된 bean은 relaxed binding을 사용하기 때문에
bean property name 과 environment property name이 정확히 일치하지 않아도 된다.
    -> camelCase, kebab-case, snake_case 모두 허용

Spring boot Junit 테스트 클래스에서 외부 설정파일을 읽으려면
    1) @SpringBootTest의 properties 에 추가
        @SpringBootTest(properties = "spring.config.location=file:config/device.yml")
    2) @TestPropertySource 추가 (단, .properties 파일만 가능)
        @TestPropertySource(locations = "file:config/device.properties")

또한 설정파일과 매핑되는 클래스가 빈이 아니라면 테스트 클래스에서 어노테이션을 추가해줘야 한다.
    - @EnableConfigurationProperties(Device.class)